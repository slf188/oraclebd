select *from investigacion;
select *from profesor;
select *from profesor_investigacion;
SELECT *FROM REVISTA;
SELECT *FROM CONGRESO;
SELECT *FROM PUBLICACION;
SELECT *FROM LINEA_INVESTIGACION;

SELECT *FROM PROFESOR;

 DBMS_OUTPUT;
 SET SERVEROUTPUT ON;


--PROCEDIMIENTO ALMACENADO QUE CONSULTA LAS PUBLICACIONES DE UN PROFESOR
CREATE OR REPLACE PROCEDURE PUBLICACIONESPROFESOR(
    ProfId IN VARCHAR2
)
IS
BEGIN
    FOR r IN (
        SELECT P.PRF_ID, P.PRF_NOMBRES, I.INV_NOMBRE, PUB.PUB_TITULO
        FROM PROFESOR P
        INNER JOIN PROFESOR_INVESTIGACION PI ON P.PRF_ID = PI.PRF_ID
        INNER JOIN INVESTIGACION I ON PI.INV_ID = I.INV_ID
        INNER JOIN PUBLICACION PUB ON I.INV_ID = PUB.INV_ID
        WHERE P.PRF_ID = ProfId
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('Profesor ID: ' || r.PRF_ID);
        DBMS_OUTPUT.PUT_LINE('Nombre: ' || r.PRF_NOMBRES);
        DBMS_OUTPUT.PUT_LINE('Nombre de la Investigación: ' || r.INV_NOMBRE);
        DBMS_OUTPUT.PUT_LINE('Título de la Publicación: ' || r.PUB_TITULO);
        DBMS_OUTPUT.PUT_LINE('************************');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al ejecutar la consulta: ' || SQLERRM);
END;
/


DECLARE
    ProfId VARCHAR2(10) := 'PROF_001';
BEGIN
    PUBLICACIONESPROFESOR(ProfId);
END;
/


--PROCEDIMIENTO ALMACENADO QUE CONSULTA LAS LINEAS DE INVESTIGACIÓN DE UN PROFESOR

CREATE OR REPLACE PROCEDURE LINEASINVESTIGACIONPROFESOR(
    ProfId IN VARCHAR2
)
IS
BEGIN
    FOR r IN (
        SELECT P.PRF_ID, P.PRF_NOMBRES, LNINV.LNINV_NOMBRE, LNINV.LNINV_DESCRIPTORES
        FROM PROFESOR P
        INNER JOIN PROFESOR_INVESTIGACION PI ON P.PRF_ID = PI.PRF_ID
        INNER JOIN INVESTIGACION I ON PI.INV_ID = I.INV_ID
        INNER JOIN PUBLICACION PUB ON I.INV_ID = PUB.INV_ID
        INNER JOIN LINEA_INVESTIGACION LNINV ON LNINV.PUB_ID = PUB.PUB_ID
        WHERE P.PRF_ID = ProfId
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('Profesor ID: ' || r.PRF_ID);
        DBMS_OUTPUT.PUT_LINE('Nombre del profesor: ' || r.PRF_NOMBRES);
        DBMS_OUTPUT.PUT_LINE('Nombre de la Linea de Investigación: ' || r.LNINV_NOMBRE);
        DBMS_OUTPUT.PUT_LINE('Título de la Publicación: ' || r.LNINV_DESCRIPTORES);
        DBMS_OUTPUT.PUT_LINE('************************');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al ejecutar la consulta: ' || SQLERRM);
END;
/


DECLARE
    ProfId VARCHAR2(10) := 'PROF_001';
BEGIN
    LINEASINVESTIGACIONPROFESOR(ProfId);
END;
/


SELECT I.INV_ID, COUNT(LN.LNINV_ID) AS NUMERO_LINEAS
FROM INVESTIGACION I
INNER JOIN PUBLICACION P ON I.INV_ID = P.INV_ID
INNER JOIN LINEA_INVESTIGACION LN ON LN.PUB_ID = P.PUB_ID
GROUP BY I.INV_ID;


SELECT I.INV_ID, I.INV_NOMBRE, COUNT(LN.LNINV_ID) AS NUMERO_LINEAS
FROM INVESTIGACION I
INNER JOIN PUBLICACION P ON I.INV_ID = P.INV_ID
INNER JOIN LINEA_INVESTIGACION LN ON LN.PUB_ID = P.PUB_ID
GROUP BY I.INV_ID, I.INV_NOMBRE;



--cuantas lineas de investigacion tiene cada proyecto
CREATE OR REPLACE PROCEDURE NUMEROLINEASINVESTIGACION
IS
BEGIN
    FOR r IN (
        SELECT I.INV_ID, I.INV_NOMBRE, COUNT(LN.LNINV_ID) AS NUMERO_LINEAS
        FROM INVESTIGACION I
        INNER JOIN PUBLICACION P ON I.INV_ID = P.INV_ID
        INNER JOIN LINEA_INVESTIGACION LN ON LN.PUB_ID = P.PUB_ID
        GROUP BY I.INV_ID, I.INV_NOMBRE
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID de Investigación: ' || r.INV_ID);
        DBMS_OUTPUT.PUT_LINE('Nombre de Investigación: ' || r.INV_NOMBRE);
        DBMS_OUTPUT.PUT_LINE('Número de Líneas de Investigación: ' || r.NUMERO_LINEAS);
        DBMS_OUTPUT.PUT_LINE('************************');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al ejecutar la consulta: ' || SQLERRM);
END;
/


BEGIN
    NUMEROLINEASINVESTIGACION;
END;
/

--SUPERVISION EN UN DETERMINADO TIEMPO DE PARTICIPACION DENTRO DE UNA INVESTIGACION
SELECT PRF_ID, PRFINV_FECHA_INICIO, PRFINV_FECHA_FIN
FROM PROFESOR_INVESTIGACION
WHERE INV_ID = 'INVE_001' AND PRFINV_ES_LIDER <> 1;








-- procedimiento almacenado que obtiene las supervisiones dentro de un proyecto de investigacion ( sin líder)
CREATE OR REPLACE PROCEDURE OBTENER_SUPERVISION(
    InvId IN VARCHAR2
)
IS
BEGIN
    FOR r IN (
        SELECT PI.PRF_ID, PI.PRFINV_FECHA_INICIO, PI.PRFINV_FECHA_FIN
        FROM PROFESOR_INVESTIGACION PI
        WHERE PI.INV_ID = InvId AND PI.PRFINV_ES_LIDER <> 1
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID del Profesor: ' || r.PRF_ID);
        DBMS_OUTPUT.PUT_LINE('Fecha de Inicio: ' || r.PRFINV_FECHA_INICIO);
        DBMS_OUTPUT.PUT_LINE('Fecha de Fin: ' || r.PRFINV_FECHA_FIN);
        DBMS_OUTPUT.PUT_LINE('-----------------------------------');
    END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al ejecutar la consulta: ' || SQLERRM);
END;
/

BEGIN
    OBTENER_SUPERVISION('INVE_001');
END;
/


